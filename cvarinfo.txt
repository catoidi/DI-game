//DI
server bool di_fancylight = true; //enemy projectiles emit light, disable to save performance.
server int di_floortic = 1050; //controls how long blood/casings are left on the ground. default is 30 seconds.
server bool di_testcvar = true; //test cvar pls ignore
server bool di_autosave = false; //game will save at the end of every wave (not recommended)

//DI menu options
user bool di_menu_dosave = false; //enable save/load options on main menu.
user bool di_menu_gzdoom = false; //options button jumps straight to gzdoom options instead of DI options.
user bool di_menu_asktutorial = false; //check if the player has been asked about the tutorial yet.

//DI menu unlocks
server cheat bool di_unlock_cheat = false; //cheat mode, enables all "di_unlock" cvars.
server cheat bool di_unlock_unfair = false; //unlocks "unfair" difficulty. unlocked through reaching Wave 30 in Hard Mode.
server cheat bool di_unlock_lvl_di01 = false; //unlocks Level 1. unlocked through playing/skipping the tutorial.
server cheat bool di_unlock_lvl_di02 = false; //unlocks Level 2. unlocked through reaching Wave 10 on Level 1.
server cheat bool di_unlock_plr_box = false; //unlocks the Box Player. unlocked through purchasing 3 Box Party weapons at once.
server cheat bool di_unlock_plr_burger = false; //unlocks the Burger Player. unlocked through purchasing 50 burgers.
server cheat int di_burgercount = 0; //this must reach 50 to unlock burger.

//DI crosshair
user int di_xhair_toggle = 2; //0 is disabled. 1 is static crosshair. 2 is dynamic crosshair (shows weapon accuracy).
user float di_xhair_scale = 2.0; //the size of the di crosshair.
user float di_xhair_alpha = 1.0; //guess what this does.
user color di_xhair_color = "FF FF FF"; //the default color of the crosshair.
user bool di_xhair_fresh_toggle = true; //fresh meter below crosshair.
user float di_xhair_fresh_scale = 1.0; //how long the meter can grow.
user float di_xhair_fresh_alpha = 0.65; //another alpha cvar, combined with the crosshair's alpha.
user bool di_xhair_precise = false; //toggles the precise crosshair mode.
user bool di_xhair_dot = false; //toggles the dot in the middle.

//DI item hud
user bool di_itemhud_toggle = true; //enables the item hud.
user float di_itemhud_scale = 0.75; //controls the size of the passive items shown at the top left of the screen.
user float di_itemhud_alpha = 0.75; //opacity of the item hud.

//DI hats (in multiplayer, the players will inherit the host's hats.)
server cheat int dihat_freddie = 0; //how many freds you've murdered.
server cheat bool dihat_unlock_07 = false; //kill 100 freds
server cheat bool dihat_unlock_08 = false; //kill 350 freds
server cheat bool dihat_unlock_09 = false; //kill 1000 freds

//box party hat stuff (copy/pasted from box party)
user bool box_hat_color = false;
user bool box_hat_hidelock = false; //hide all locked hats in the hat menu.
user cheat string box_hat_current = "00HMA1"; //currently selected hat
user cheat bool box_hat_cheat = false; //auto-unlock all hats
user cheat bool box_hat_unlock_00 = true; //not used

//boxhud
user int box_hudshake = 2; //how much hud shakes when taking damage
user bool di_showfreshtimer = false;

//nashhpbar
user bool nashhpbar_enable = true;

//damnums
server bool   dam_enabled = true;
server bool   dam_shootable = false;
server int    dam_spray = 0;
user   string dam_fontclass = "DamNumFontGameDefault";
user   string dam_translation = "DamDefault";
user   int    dam_physics = 0;
user   bool   dam_usetypes = true;

//precise crosshair
server bool pc_enable = false;
user bool pc_flip_y = false;
user bool pc_flip_x = false;
user bool pc_disable_slot_1    = false;
user bool pc_disable_not_ready = false;
user bool pc_disable_no_weapon = true;
user bool pc_target_health = false;
user float pc_y;

//aim assist (base)
	User Bool cl_aim_assist_enabled = false;
	User Float cl_aim_assist_angle_max = 8;
	User Float cl_aim_assist_max_dist = 5000;
	User Float cl_aim_assist_rot_speed = 0.5;
	User Int cl_aim_assist_method = 1;
//aim assist (aim height)
	User Int cl_aim_assist_height_mode=1;

	User Float cl_aim_assist_vertical_plus_offset_enemy = 0;
	User Float cl_aim_assist_vertical_minus_offset_enemy = 12;
	User Float cl_aim_assist_enemy_height_mult = 1;
	
	User Float cl_aim_assist_vertical_plus_offset_player = 0;
	User Float cl_aim_assist_vertical_minus_offset_player = 0;
	User Float cl_aim_assist_player_height_mult = 1;

	User Float cl_aim_assist_height_mode_transition_distance_start=500;
	User Float cl_aim_assist_height_mode_transition_distance_end=100;
//aim assist (performance)
	User Float cl_aim_assist_precision = 0.5;
	User Float cl_aim_assist_radial_precision = 30;
	
	User Bool cl_aim_assist_check_for_obstacles = true;
	User Int cl_aim_assist_on_obstruction=1;
//aim assist (debug)
	User Bool cl_aim_assist_debug_marker = false;
	User Bool cl_aim_assist_trace_debug = false;
//aim assist (presets)
	NoSave String __aim_assist_user_presets_json = "{}";
	NoSave NoArchive String __aim_assist_save_preset_name = "";
//aim assist (recenter)
	User Bool cl_recenter_enabled = false;
	User Float cl_recenter_step = 1.0;
	User Bool cl_recenter_always_enabled = false;
//aim assist (old cvars)
	USER BOOL AIM_ASSIST_ENABLED = true;
	USER FLOAT AIM_ASSIST_ANGLE_MAX = 8;
	USER FLOAT AIM_ASSIST_PRECISION = 0.1;
	USER FLOAT AIM_ASSIST_RADIAL_PRECISION = 30;
	USER FLOAT AIM_ASSIST_MAX_DIST = 5000;
	USER FLOAT AIM_ASSIST_ROT_SPEED = 1;
	USER INT AIM_ASSIST_METHOD = 1;
	USER INT AIM_ASSIST_HOLD_KEY_1 = 0;
	USER INT AIM_ASSIST_HOLD_KEY_2 = 0;
	USER BOOL AIM_ASSIST_CHECK_FOR_OBSTACLES = true;
	USER BOOL AIM_ASSIST_DEBUG_MARKER = false;
	USER FLOAT AIM_ASSIST_VERTICAL_PLUS_OFFSET_ENEMY = 0;
	USER FLOAT AIM_ASSIST_VERTICAL_MINUS_OFFSET_ENEMY = 12;
	USER FLOAT AIM_ASSIST_ENEMY_HEIGHT_MULT = 1;
	USER FLOAT AIM_ASSIST_VERTICAL_PLUS_OFFSET_PLAYER = 0;
	USER FLOAT AIM_ASSIST_VERTICAL_MINUS_OFFSET_PLAYER = 0;
	USER FLOAT AIM_ASSIST_PLAYER_HEIGHT_MULT = 1;
	USER INT AIM_ASSIST_HEIGHT_MODE=0;
	USER FLOAT AIM_ASSIST_HEIGHT_MODE_TRANSITION_DISTANCE_START=500;
	USER FLOAT AIM_ASSIST_HEIGHT_MODE_TRANSITION_DISTANCE_END=100;
	USER INT AIM_ASSIST_ON_OBSTRUCTION=1;
	USER BOOL AIM_ASSIST_TRACE_DEBUG = false;
	user bool rc_enabled = false;
	user float rc_step = 1.0;
	user bool rc_always_enabled = false;