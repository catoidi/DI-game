//zboxscript/weapons/popcorngun.zsc

CLASS PopcornGunPower : Inventory {Default{Inventory.MaxAmount 3;}}

CLASS PopcornGunAmmo2 : Ammo
{
	//you gain 1 of this every time u fire primary.

	Default
	{
		Inventory.Amount 1;
		Inventory.MaxAmount 24;
		Inventory.Icon "SHUTY0";
		Inventory.AltHUDIcon "SHUTY0";
	}

	States
	{
		//not supposed to show up naturally in the world.
		Spawn:
			PBOX A -1;
			Stop;
	}
}

CLASS PopcornGun : DI_Weapon //200
{
	//popcorngun shoot very fast boolet

	Default
	{
		Radius 20;
		Height 24;
		DI_Weapon.FreshBonus 2;
		DI_Weapon.BaseDamage 13;
		DI_Weapon.Ammo1HUD 4;
		DI_Weapon.Ammo2HUD 1;
		DI_Weapon.BaseAccuracy 3;
		DI_Weapon.Recoil 1;
		DI_Weapon.RecoilRecover 2;
		DI_Weapon.AutoOffset false;
		DI_Weapon.DontGiveAmmo2 true;
		Weapon.SelectionOrder 2000;
		Weapon.SlotNumber 3;
		Weapon.SlotPriority 1;
		Weapon.Kickback 100;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 24;
		Weapon.AmmoUse2 12;
		Weapon.AmmoGive2 0;
		Weapon.AmmoType "BoxAmmo";
		Weapon.AmmoType2 "PopcornGunAmmo2";
		Inventory.Icon "POPGM0";
		Inventory.PickupMessage "Acquired the Popcorn Machine Gun. (+24 Party Ammo)";
		Obituary "$BOX_DIE_POPCORN";
		Tag "Popcorn Gun";
		+WEAPON.AMMO_CHECKBOTH;
		-WEAPON.AMMO_OPTIONAL;
		+CASTSPRITESHADOW;
		+COUNTITEM;
		//$Category "Box Party/Weapons"
		//$Title "Popcorn Gun"
		//$Color 9
	}
	
	int FireRate;
	
	action void A_PopcornGunFire (void)
	{
		A_StartSound("weapons/popcorn/popcorn");
		DI_FireProjectile("PopcornBullet", -32768, -32768, -32768, -4, 8, FPF_AIMATANGLE, isRecoil: false);
		A_GiveInventory("PopcornGunAmmo2", 1);
	}
	
	States
	{
		Ready:
			POPG A 1 A_WeaponReady;
			Loop;
		Deselect:
			POPG A 0 A_Lower;
			Loop;
		Select:
			POPG AAA 0 A_Raise;
			POPG A 1 A_Raise;
			Loop;
		Fire:
			POPG B 0 A_JumpIfInventory("BoxAmmo", 1, 2);
			POPG B 0 A_Jump(256, "NoReload");
			POPG B 0 A_WeaponOffset(-10, 30, WOF_INTERPOLATE);
			#### # 0 A_JumpIfInventory("BoxAmmo", 1, 3);
			#### # 0 ACS_NamedExecute("noammo", 0, 0, 0, 0);
			#### # 0 A_Jump(256, 2);
			POPG B 1 A_PopcornGunFire();
			POPG C 5 A_WeaponOffset(-5, 25, WOF_INTERPOLATE);
			POPG B 0 A_WeaponOffset(-10, 30, WOF_INTERPOLATE);
			#### # 0 A_JumpIfInventory("BoxAmmo", 1, 2);
			#### # 0 A_Jump(256, 2);
			POPG B 1 A_PopcornGunFire();
			POPG C 5 A_WeaponOffset(-5, 25, WOF_INTERPOLATE);
			POPG C 3 A_Refire("FireTwo");
			Goto Ready;
		FireTwo:
			//#### # 0 {invoker.recnum += 1;}
			POPG D 0 A_WeaponOffset(-12, 32, WOF_INTERPOLATE);
			#### # 0 A_JumpIfInventory("BoxAmmo", 1, 2);
			#### # 0 A_Jump(256, 2);
			POPG D 1 A_PopcornGunFire();
			POPG E 3 A_WeaponOffset(-7, 27, WOF_INTERPOLATE);
			POPG D 0 A_WeaponOffset(-12, 32, WOF_INTERPOLATE);
			#### # 0 A_JumpIfInventory("BoxAmmo", 1, 2);
			#### # 0 A_Jump(256, 2);
			POPG D 1 A_PopcornGunFire();
			POPG E 3 A_WeaponOffset(-7, 27, WOF_INTERPOLATE);
			POPG D 0 A_Refire("FireTwo");
			POPG E 5 A_WeaponOffset(-5, 25, WOF_INTERPOLATE);
			POPG I 8;
			//POPG J 8 {invoker.recnum = 0;}
			Goto Ready;
		AltFire:
			POPN F 0;
			POPN F 0 A_JumpIfInventory("PopcornGunAmmo2", 12, 2);
			POPN F 0 A_Jump(256, "NoReload");
			POPN F 0 A_WeaponOffset(-14, 34, WOF_INTERPOLATE);
			POPN F 0 A_StartSound("weapons/popcorn/poppop");
			POPN F 4 DI_FireProjectile("PopcornBomb", -32768, -32768, invoker.AmmoUse2, -4, 8, FPF_AIMATANGLE, isRecoil: false);
			POPN H 8 A_WeaponOffset(-5, 25, WOF_INTERPOLATE);
			POPN IJ 8;
			POPN AAAAAAAA 1 A_WeaponOffset(0, 10, WOF_ADD | WOF_INTERPOLATE);
			POPG AAAAAAAA 1 A_WeaponOffset(0, -10, WOF_ADD | WOF_INTERPOLATE);
			Goto Ready;
		NoReload:
			#### # 0 A_StartSound("noammo", starttime: 0.1);
			POPG A 1 A_OverlayOffset(PSP_WEAPON, 0, 4, WOF_ADD);
			POPG AAAA 1 A_OverlayOffset(PSP_WEAPON, 0, -1, WOF_ADD);
			POPG A 4;
			Goto Ready;
		Spawn:
			POPG M -1;
			Stop;
	}
}

CLASS PopcornBullet : DI_Actor
{
	mixin DI_ProjectileMixin;

	//pew epw ewppewp
	Default
	{
		DamageFunction throwdam;
		DamageType "Popcorn";
		BounceType "Doom";
		BounceFactor 0.4;
		WallBounceFactor 0.8;
		ProjectileKickback 100;
		Speed 20;
		Radius 4;
		Height 4;
		Gravity 0.2;
		Mass 1;
	
		
		Projectile;
		-NOGRAVITY;
		+INTERPOLATEANGLES;
		+ROLLSPRITE;
		+SPRITEANGLE;
		+FORCEXYBILLBOARD;
		+BLOODSPLATTER;
		+DONTBOUNCEONSHOOTABLES;
		+DONTBOUNCEONSKY;
		+EXPLODEONWATER;
	}
	
	int throwdam;
	bool isbombed;
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		if (isbombed == false) {CheckStatusChange();}
		
		throwdam = 18;
		if ((target is "PlayerPawn") && (target.player.ReadyWeapon is "PopcornGun"))
		{
			PopcornGun tarwpn = PopcornGun(target.player.ReadyWeapon);
			throwdam = tarwpn.wpn_damage;
			throwdam *= tarwpn.damagemult;
		}
	}
	
	action void FakePopcornCrumb()
	{
		A_SpawnParticleEX("White", TexMan.CheckForTexture("POPGL0"), 0, SPF_ROLL, 22, 4.5, random(0, 359), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 3), 0, 0, -1, 1, 0, -0.2, random(0, 359), 3 - (6 * (random(0, 1))));
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			POPG K 1 A_Jump(128, "SpeenLeft");
		SpeenRight:
			"####" "#" 1 A_SetRoll(roll - 8);
			Loop;
		SpeenLeft:
			"####" "#" 1 A_SetRoll(roll + 8);
			Loop;
		XDeath:
		Crash:
			TNT1 A 0 A_StartSound("weapons/popcorn/pophit");
		Death.Sky:
		Death:
			TNT1 A 1 {
				A_ProjectileSmoke();
				FakePopcornCrumb();
				FakePopcornCrumb();
				FakePopcornCrumb();
				FakePopcornCrumb();
				FakePopcornCrumb();
				if (invoker.damagetype != invoker.default.damagetype) {DIProjectileTrail(3.0);}
			}
			Stop;
	}
}

CLASS PopcornBomb : DI_Actor
{
	mixin DI_ProjectileMixin;

	Default
	{
		DamageFunction throwdam;
		DamageType "Popcorn";
		ProjectileKickback 300;
		Speed 20;
		Radius 8;
		Height 12;
		Gravity 0.4;
		Mass 10;

		Projectile;
		-NOGRAVITY;
		+INTERPOLATEANGLES;
		+ROLLSPRITE;
		+SPRITEANGLE;
		+FORCEXYBILLBOARD;
		+BLOODSPLATTER;
	}
	
	int throwdam;
	bool bbullet;
	actor bullet;
	PopcornBullet pbullet;
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		CheckStatusChange();
		
		throwdam = 72;
		if ((target is "PlayerPawn") && (target.player.ReadyWeapon is "PopcornGun"))
		{
			PopcornGun tarwpn = PopcornGun(target.player.ReadyWeapon);
			throwdam = tarwpn.wpn_damage * 4;
			throwdam *= tarwpn.damagemult;
		}
	}

	int CrumbTimer;
	int BulletAmount;
	
	action void FakeBombCrumb()
	{
		A_SpawnParticleEX("White", TexMan.CheckForTexture("POPNL0"), 0, SPF_ROLL, 50, 20, random(0, 359), random(-12, 12), random(-12, 12), random(-12, 12), random(-3, 3), random(-3, 3), random(-2, 5), 0, 0, -0.33, 1, 0, -0.1, random(0, 359), 6 - (12 * (random(0, 1))));
	}
	
	action void FakeBombTrail()
	{
		A_SpawnParticleEX("White", TexMan.CheckForTexture("POPNL0"), 0, SPF_ROLL, 50, 20, 0, frandom(-4, 4), frandom(-4, 4), frandom(-4, 4), 0, 0, 0, 0, 0, -0.33, 1, 0, -0.1, random(0, 359), 6 - (12 * (random(0, 1))));
	}

	States
	{
		Spawn:
			TNT1 A 0 NoDelay {
				A_SetRoll(random(0, 359));
			}
			POPN K 1 A_Jump(128, "SpeenLeft");
		SpeenRight:
			"####" "#" 1 {
				A_SetRoll(roll - 8);
				if (random(0, 3) == 0) {FakeBombTrail();}
			}
			Loop;
		SpeenLeft:
			"####" "#" 1 {
				A_SetRoll(roll + 8);
				if (random(0, 3) == 0) {FakeBombTrail();}
			}
			Loop;
		XDeath:
		Crash:
			TNT1 A 0 A_StartSound("weapons/popcorn/pophit");
		Death.Sky:
		Death:
			TNT1 A 4 {
				BulletAmount = 0;
				while (BulletAmount < 20)
				{
					[invoker.bbullet, invoker.bullet] = A_SpawnItemEx("PopcornBullet", frandom(-4, 4), frandom(-4, 4), frandom(-4, 4), frandom(-30, 30), frandom(-30, 30), frandom(-12, 12), random(0, 359));
					BulletAmount += 1;
					if (invoker.bullet) {invoker.pbullet = PopcornBullet(invoker.bullet); invoker.pbullet.damagetype = invoker.damagetype; invoker.pbullet.isbombed = true;}
				}
				A_SpawnItemEx("SafeBoomSmall", 0, 0, 0, 0, 0, 0);
				A_Explode(throwdam, 48);
				if (invoker.damagetype != invoker.default.damagetype) {DIProjectileTrail(6.0);}
				//A_BoxParticle("cf 5f 04", 9, 8, 24);
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
				FakeBombCrumb();
			}
			TNT1 AAA 4 A_Explode(12, 48);
			Stop;
	}
}






