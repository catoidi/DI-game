//zscript_DI/weapons/normal/poisoner.zsc

Class PoisonGun : DI_Weapon
{
	mixin DI_Spray_PureRandom;
	
	Default
	{
		DI_Weapon.FreshBonus 2;
		DI_Weapon.BaseDamage 80;
		DI_Weapon.Recoil 1.5;
		DI_Weapon.RecoilRecover 1.25;
		DI_Weapon.RecoilOffset 1.5;
		DI_Weapon.MaxSpread 3;
		DI_Weapon.BonusSpread 1.25;
		Weapon.Kickback 500;
		Weapon.SelectionOrder 10000;
		Weapon.SlotNumber 1;
		Weapon.SlotPriority 1;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 12;
		Weapon.AmmoType "PoisonGunAmmo";
		DamageType "Poison";
		Inventory.Icon "PPISZ0";
		Inventory.Pickupmessage "Picked up the P.P.D.S.! (Precise Poison Distribution System)";
		Tag "P.P.D.S.";
	}
	
	int shootcount;
	int layertimer[4];
	
	action void PoisonFlashInit(int layer)
	{
		invoker.layertimer[-layer - 2] = 0;
		A_OverlayFlags(layer, PSPF_FORCEALPHA, true);
		A_OverlayAlpha(layer, 1.0);
		A_OverlayPivotAlign(layer, PSPA_CENTER, PSPA_CENTER);
		A_OverlayRotate(layer, random(0, 359));
	}
	
	action void PoisonFlashTick(int layer)
	{
		invoker.layertimer[-layer - 2] += 1;
		A_OverlayAlpha(layer, 1.0 - (0.25 * invoker.layertimer[-layer - 2]));
		A_OverlayScale(layer, 0.2, 0.2, WOF_ADD);
	}
	
	States
	{
		Ready:
			PPIS # 1 
			{
				if (invoker.countinv("PoisonGunAmmo") == 0) {frame = 0;}
				else {frame = 3;}
				DI_WeaponReady(WRF_ALLOWRELOAD);
			}
			Loop;
		Deselect:
			PPIS A 0 A_Lower;
			Loop;
		Select:
			PPIS AAA 0 A_Raise;
			PPIS A 1 A_Raise;
			Loop;
		Fire:
			#### # 0 DI_FireCheck();
			#### # 0 {invoker.shootcount = 0;}
			PPIS BBBB 2 BRIGHT 
			{
				if (DI_FireCheck()) {return ResolveState("FireEmpty");}
				switch(invoker.shootcount)
				{
					case 0: A_Overlay(-2, "Flash0"); break;
					case 1: A_Overlay(-3, "Flash1"); break;
					case 2: A_Overlay(-4, "Flash2"); break;
					case 3: A_Overlay(-5, "Flash3"); break;
				}
				DI_FireProjectile("DI_Tracer_PoisonGun", spawnofs_xy: -4);
				A_StartSound("pistpow");
				++invoker.shootcount;
				return ResolveState(null);
			}
			PPIS B 5 BRIGHT;
			PPIS E 5;
			PPIS A 0 A_Refire;
			PPIS AA 1;
			Goto Ready;
		FireEmpty:
			PPIS C 5;
			PPIS D 0 A_Refire;
			PPIS DD 1;
			Goto Ready;
		Flash0:
			TNT1 A 0 PoisonFlashInit(-2);
			PPIS LLL 1 BRIGHT PoisonFlashTick(-2);
			Stop;
		Flash1:
			TNT1 A 0 PoisonFlashInit(-3);
			PPIS LLL 1 BRIGHT PoisonFlashTick(-3);
			Stop;
		Flash2:
			TNT1 A 0 PoisonFlashInit(-4);
			PPIS LLL 1 BRIGHT PoisonFlashTick(-4);
			Stop;
		Flash3:
			TNT1 A 0 PoisonFlashInit(-5);
			PPIS LLL 1 BRIGHT PoisonFlashTick(-5);
			Stop;
		Reload:
			PPIS # 0 DI_ReloadCheck();
			PPIS #### 1 A_OverlayOffset(PSP_WEAPON, -5, -7, WOF_ADD);
			PPIS #### 1 A_OverlayOffset(PSP_WEAPON, -2.5, -3.5, WOF_ADD);
			PPIS # 1;
			PPIS ######## 1 A_OverlayOffset(PSP_WEAPON, 10, 5, WOF_ADD);
			PPIS F 2 
			{
				if (invoker.countinv("PoisonGunAmmo") == 0) {frame = 7;}
			}
			PPIS F 10 A_Overlay(2, "Reload_Eject");
			PPIS # 16 A_Overlay(3, "Reload_Shell");
			PPIS # 4 A_OverlayOffset(PSP_WEAPON, 0, 2, WOF_ADD);
			PPIS G 2 A_OverlayOffset(PSP_WEAPON, 0, -2, WOF_ADD);
			#### # 0 A_GiveInventory("PoisonGunAmmo", 9999);
			PPIS G 4;
			PPIS ######## 1 A_OverlayOffset(PSP_WEAPON, -10, -5, WOF_ADD);
			PPIS K 1;
			PPIS #### 1 A_OverlayOffset(PSP_WEAPON, 2.5, 3.5, WOF_ADD);
			PPIS ###A 1 A_OverlayOffset(PSP_WEAPON, 5, 7, WOF_ADD);
			Goto Ready;
		Reload_Shell:
			TNT1 A 0 A_OverlayOffset(3, 18, 72, WOF_ADD);
			PPIS IIIIIIIIIIII 1 A_OverlayOffset(3, -2, -6, WOF_ADD);
			PPIS IIII 1 A_OverlayOffset(3, 1.5, 0, WOF_ADD);
			PPIS I 4;
			Stop;
		Reload_Eject:
			TNT1 A 0;
			TNT1 A 0 A_JumpIfInventory("PoisonGunAmmo", 1, 2);
			PPIS J 0 A_Jump(256, 2);
			PPIS I 0;
			#### ########## 1 
			{
				A_OverlayOffset(2, 6, 8, WOF_ADD);
			}
			Stop;
		Spawn:
			PPIS Z -1;
			Stop;
	}
}

Class PoisonGunAmmo : Ammo
{
	//it sure is ammo.
	Default
	{
		Inventory.Amount 12;
		Inventory.MaxAmount 12;
	}
}



Class DI_Tracer_PoisonGun : DI_Tracer
{
	Default
	{
		Translation "DamGreen";
		DamageType "Poison";
	}
	
	States
	{
		Spawn:
			TRAC A -1;
			Loop;
		Bounce.Floor:
		Bounce.Ceiling:
		Bounce.Wall:
			#### # 1 
			{
				A_SpawnItemEX("DI_PoisonPuff", flags: SXF_NOCHECKPOSITION);
				if (invoker.wpn) {A_DIFakeStatusPuff(3.0 * invoker.wpn.wpn_bulletsize);}
			}
			#### # 0 A_Jump(256, "Spawn");
			Stop;
		Bounce.Actor:
			#### # 1
			{
				if (invoker.wpn) {A_DIFakeStatusPuff(3.0 * invoker.wpn.wpn_bulletsize);}
			}
			#### # 0 A_Jump(256, "Spawn");
			Stop;
		Crash:
		Death.Sky:
		Death:
			TNT1 A 5 
			{
				A_SpawnItemEX("DI_PoisonPuff", flags: SXF_NOCHECKPOSITION);
				if (invoker.wpn) {A_DIFakeStatusPuff(3.0 * invoker.wpn.wpn_bulletsize);}
			}
			Stop;
		XDeath:
			TNT1 A 5 
			{
				A_SpawnParticleEX("fff59e", TexMan.CheckForTexture("PUFFA0"), STYLE_NONE, SPF_ROLL, 10, 8 + sqrt(invoker.GetWeaponDamage()), startroll: random(0, 359));
				if (invoker.wpn) {A_DIFakeStatusPuff(3.0 * invoker.wpn.wpn_bulletsize);}
			}
			Stop;
	}
}