//zscript_DI/weapons/normal/grenadelauncher.zsc

CLASS GrenadeLauncher : DI_Weapon
{
	mixin DI_Spray_Progressive;

	Default
	{
		DI_Weapon.FreshBonus 1;
		DI_Weapon.BaseDamage 1200; //direct hit does 1/10th of this.
		DI_Weapon.MaxSpread 10;
		DI_Weapon.BonusSpread 6;
		DI_Weapon.PlayerSpeed -0.1;
		DI_Weapon.Recoil 6.0;
		DI_Weapon.RecoilOffset 2.0;
		DI_Weapon.RecoilRecover 0.5;
		Weapon.Kickback 0;
		Weapon.SelectionOrder 10000;
		Weapon.SlotNumber 5;
		Weapon.SlotPriority 1;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 3;
		Weapon.AmmoType "GrenadeLauncherAmmo";
		Inventory.Pickupmessage "Acquired the Grenade Launcher.";
		Inventory.Icon "GLANZ0";
		Tag "Grenade Launcher";
		//$Category "DI/Weapons/"
		//$Title "Grenade Launcher"
		//$Color 9
	}
	
	States
	{
		Ready:
			GLAN # 0 DI_WeaponReady(WRF_ALLOWRELOAD);
			#### A 0 A_JumpIfInventory("GrenadeLauncherAmmo", 2, 2);
			#### G 0;
			#### # 1;
			Loop;
		Deselect:
			GLAN # 0 A_Lower;
			Loop;
		Select:
			GLAN A 0 A_JumpIfInventory("GrenadeLauncherAmmo", 2, "SelectLoop");
			GLAN G 0 A_Jump(256, "SelectLoop");
			Stop;
		SelectLoop:
			GLAN ### 0 A_Raise;
			GLAN # 1 A_Raise;
			Loop;
		Fire:
			GLAN # 0 DI_FireCheck();
			GLAN # 2 
			{
				A_SetPitch(pitch - 3);
				DI_FireProjectile("GrenadeLauncherBullet", invoker.wpn_projectiles, -32768, invoker.AmmoUse1, -4, 4, FPF_AIMATANGLE, isRecoil: true);
				DI_GunSound("gunpow2", CHAN_AUTO, volume: 0.7, pitch: 0.7);
				DI_StartSound("weapons/popcorn/poppop", CHAN_AUTO, volume: 0.5, pitch: 0.8);
				A_Overlay(-10, "PuffSmoke");
			}
			#### # 0 DI_StartSound("noammo", CHAN_AUTO, volume: 0.5, pitch: 0.8, startTime: 0.15);
			GLAN # 0 A_JumpIfInventory("GrenadeLauncherAmmo", 2, 2);
			GLAN # 0 A_Jump(256, "Fire_LowAmmo");
			GLAN CCDDDD 1;
			GLAN D 0 A_Refire;
			GLAN DD 1;
			Goto Ready;
		Fire_LowAmmo:
			GLAN CCGGGG 1;
			GLAN G 0 A_Refire;
			GLAN GG 1;
			Goto Ready;
		PuffSmoke:
			GLAN B 2;
			Stop;
		Reload:
			GLAN # 0 DI_ReloadCheck();
			GLAN # 0 A_JumpIfInventory("GrenadeLauncherReload", 1, "ReloadStart");
			GLAN ###### 1 A_OverlayOffset(PSP_WEAPON, 10, -2, WOF_ADD);
			Goto ReloadStart;
		ReloadStart:
			GLAN # 10 A_Overlay(2, "Reload_Shell");
			#### # 0 DI_StartSound("shell1", CHAN_AUTO, pitch: 0.5);
			GLAN D 4 A_OverlayOffset(PSP_WEAPON, 0, 2, WOF_ADD);
			#### # 0 DI_StartSound("shell1", CHAN_AUTO, pitch: 0.7);
			GLAN A 2 A_OverlayOffset(PSP_WEAPON, 0, -2, WOF_ADD);
			#### # 0 A_GiveInventory("GrenadeLauncherAmmo", 1);
			GLAN A 0 A_GiveInventory("GrenadeLauncherReload", 1);
			GLAN A 2 A_JumpIfInventory("GrenadeLauncherAmmo", invoker.Ammo1.MaxAmount, "ReloadEnd");
			GLAN A 2 DI_ContinueReload();
			Goto ReloadEnd;
		Reload_Shell:
			TNT1 A 0 A_OverlayOffset(2, 6, 36, WOF_ADD);
			GLAN EEEEEE 1 A_OverlayOffset(2, -2, -6, WOF_ADD);
			GLAN EEEE 1 A_OverlayOffset(2, 1.5, 0, WOF_ADD);
			GLAN F 4;
			Stop;
		ReloadEnd:
			GLAN A 0 A_TakeInventory("GrenadeLauncherReload");
			GLAN AAAAAA 1 A_OverlayOffset(PSP_WEAPON, -10, 2, WOF_ADD);
			Goto Ready;
		NoReload:
			#### # 0 WeaponMode(0);
			#### # 0 DI_StartSound("noammo", CHAN_AUTO, starttime: 0.1);
			GLAN # 1 A_OverlayOffset(PSP_WEAPON, 0, 4, WOF_ADD);
			GLAN #### 1 A_OverlayOffset(PSP_WEAPON, 0, -1, WOF_ADD);
			GLAN # 4;
			Goto Ready;
		Spawn:
			GLAN Z -1;
			Stop;
	}
}

CLASS GrenadeLauncherReload : GreenShotgunReload {}

CLASS GrenadeLauncherBullet : DI_Projectile
{
	Default
	{
		Mass 0;
		Gravity 0.25;
		Radius 6;
		Height 12;
		Speed 20;
		DamageFunction impactdam;
		Projectile;
		DI_Projectile.FlatBullet true;
		-NOGRAVITY;
		+BLOODSPLATTER;
		+FLATSPRITE;
	}
	
	int basedam;
	int impactdam;
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		if (damagetype == "Lightning") {A_AttachLightDef("stunner", "SHOCKER2");}
		else if (damagetype == "Ice") {A_AttachLightDef("stunner", "FREEZER2");}
		else if (damagetype == "Fire") {A_AttachLightDef("stunner", "BURNER2");}
		else if (damagetype == "Poison") {A_AttachLightDef("stunner", "POISONER2");}
		
		if ((target is "PlayerPawn") && (target.player.ReadyWeapon is "GrenadeLauncher"))
		{
			GrenadeLauncher tarwpn = GrenadeLauncher(target.player.ReadyWeapon);
			basedam = tarwpn.CheckDamage();
			impactdam = 0;
		}
	}
	
	States
	{
		Spawn:
			GLAN H 3 BRIGHT A_ProjectileSmoke();
			Loop;
		XDeath:
		Crash:
		Death.Sky:
		Death:
			TNT1 A 5
			{
				A_SpawnItemEx("SafeBoom", 0, 0, 0, 0, 0, 0);
				A_Explode(invoker.basedam, 64, XF_HURTSOURCE | XF_CIRCULAR, fulldamagedistance: 64);
				if (invoker.damagetype != invoker.default.damagetype) {DIProjectileTrail(6.0);}
			}
			Stop;
	}
}

Class GrenadeLauncherAmmo : Ammo
{
	//it sure is ammo.
	Default
	{
		Radius 20;
		Height 24;
		Inventory.Amount 3;
		Inventory.MaxAmount 3;
		+CASTSPRITESHADOW;
	}
}