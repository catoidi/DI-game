//zboxscript/weapons/glowstick.zsc

//zscript code for the glowstick and glowstick accessories.

CLASS GlowstickPower : Inventory
{
	//this controls how long the glowstick's glow lasts.
	//one power is removed per tick, and there are 35 ticks per second.
	//the glowstick can last for a total of 10 seconds before running out.
	//the glowstick gains 70 power per swing, or 2 seconds of glow.

	Default
	{
		Inventory.MaxAmount 350;
	}
}

CLASS Glowstick : DI_Weapon //20010
{
	//literally the glowstick copy/pasted from box party, but with some things like color translation stuff removed.

	Default
	{
		Radius 20;
		Height 24;
		DI_Weapon.FreshBonus 4;
		DI_Weapon.BaseDamage 30;
		DI_Weapon.BaseAccuracy 2;
		DI_Weapon.AutoOffset false;
		DI_Weapon.Ammo1HUD 1;
		Weapon.SelectionOrder 9999;
		Weapon.SlotNumber 1;
		Weapon.SlotPriority 1;
		Weapon.Kickback 500;
		Weapon.AmmoUse1 1;
		Weapon.AmmoGive1 4;
		Weapon.AmmoType1 "GlowstickAmmo";
		Inventory.PickupMessage "Picked up the Glowstick! (Killing enemies with the Glowstick will make enemies drop health.)";
		Inventory.Icon "GLOWA0";
		//Inventory.AltHUDIcon "AMMOA0";
		Obituary "$BOX_DIE_GLOW";
		Tag "Glowstick";
		DamageType "Melee";
		+BLOODSPLATTER;
		+WEAPON.MELEEWEAPON;
		+WEAPON.WIMPY_WEAPON;
		+WEAPON.AMMO_OPTIONAL;
		+WEAPON.ALT_AMMO_OPTIONAL;
		+WEAPON.NOALERT;
		+INVENTORY.UNDROPPABLE;
		+CASTSPRITESHADOW;
		//$Category "Box Party/Weapons"
		//$Title "Glowstick (Weapon)"
		//$Color 9
	}
	
	di_playerbase diowner;
	
	override void DetachFromOwner()
	{
		if (owner) {owner.A_RemoveLight("Glower");}
	}
	
	States
	{	
		Ready:
			GLOW L 1
			{
				A_WeaponReady();
				WeaponMode(0);
				if (CheckInventory("GlowstickPower", 1)) 
				{
					A_Overlay(2, "Glowverlay");
				}
				else 
				{
					A_RemoveLight("Glower"); 
					A_Overlay(2, null);
				}
			}
			Loop;
		Glowverlay:
			GLOW B 0 BRIGHT A_AttachLightDef("Glower", "GLOWGREEN");
			GLOW B 1 BRIGHT A_TakeInventory("GlowstickPower", 1);
			Stop;
		Deselect:
			TNT1 A 0 
			{
				A_TakeInventory("GlowstickPower");
				A_RemoveLight("Glower");
			}
		Lowering:
			GLOW L 0 A_Lower;
			Loop;
		Select:
			GLOW LLL 0 A_Raise;
			GLOW L 1 A_Raise;
			Loop;
		Fire:
		//the glowstick does does a swipe attack coming from the top left and going to the bottom right.
			TNT1 A 0 A_AttachLightDef("Glower", "GLOWGREEN");
			#### # 0 WeaponMode(1);
			GLOW B 1 BRIGHT {
				A_WeaponOffset(30, 20, WOF_INTERPOLATE); 
				A_GiveInventory("GlowstickPower", 35);
			}
			GLOW B 1 BRIGHT A_WeaponOffset(-60, -40, WOF_INTERPOLATE);
			GLOW B 0 BRIGHT A_StartSound("weapons/glowstick/glowswsh");
			GLOW BBB 1 BRIGHT A_WeaponOffset(30, 20, WOF_ADD | WOF_INTERPOLATE);
			GLOW N 1 BRIGHT {
				A_WeaponOffset(60, 40, WOF_INTERPOLATE);
				DI_BasicMelee(0, CPF_PULLIN, "ProjectileSmoke", MeleeSound: "weapons/glowstick/glowbonk");
			}
			GLOW BBBBB 1 BRIGHT A_WeaponOffset(30, 20, WOF_ADD | WOF_INTERPOLATE);
			GLOW C 3 BRIGHT A_WeaponOffset(5, 40, WOF_INTERPOLATE);
			GLOW B 3 BRIGHT A_Refire("Fire");
			Goto Ready;
		AltFire:
			//checks if you have enough ammo to throw glowstick.
			//if not, go to melee attack.
			TNT1 A 0 A_AttachLightDef("Glower", "GLOWGREEN");
			#### # 0 WeaponMode(1);
			GLOW B 1 BRIGHT A_JumpIfInventory("GlowstickAmmo", 1, "YouGotIt");
			Goto Fire;
		YouGotIt:
			//successful glowstick throwing
			GLOW B 0 BRIGHT A_StartSound("weapons/glowstick/glowswsh");
			GLOW BBBB 1 BRIGHT A_WeaponOffset(20, 20, WOF_ADD | WOF_INTERPOLATE);
			TNT1 A 0 A_RemoveLight("Glower");
			TNT1 A 0 A_TakeInventory("GlowstickPower");
			TNT1 A 0 {invoker.DepleteAmmo(false);}
			TNT1 A 19 DI_FireProjectile("GlowstickThrow", -32768, -32768, 0, 0, 4, FPF_AIMATANGLE, -32768, isRecoil: false);
			TNT1 A 1 A_WeaponOffset(5, 120);
			GLOW L 10 A_WeaponOffset(5, 80, WOF_INTERPOLATE);
			GLOW L 10 {
				A_WeaponOffset(5, 40, WOF_INTERPOLATE);
				A_ReFire("AltFire");
			}
			Goto Ready;
		Spawn:
			//this item should only appear once in the world. at the very beginning.
			GLOW A -1 BRIGHT;
			Stop;
	}
}

CLASS GlowstickAmmo : Ammo //20021
{
	//extra glowsticks for throwin.
	//there should be lots of these in the world.
	Default
	{
		Radius 20;
		Height 24;
		Inventory.PickupMessage "\cd+1 Glowstick";
		Inventory.Amount 1;
		Inventory.MaxAmount 4;
		Inventory.Icon "GLOWA0";
		+CASTSPRITESHADOW;
		//$Category "Box Party/Ammo"
		//$Title "Glowstick (Ammo)"
		//$Color 19
	}
	
	States
	{
		Spawn:
			GLOW K -1;
			Stop;
	}
}

CLASS GlowstickAmmoDrop : GlowstickAmmo
{
	mixin DI_ActorMixin;

	Default
	{
		+Inventory.ALWAYSPICKUP;
		+FLOATBOB;
	}
	
	int FadeNum;

	States
	{
		Spawn:
			GLOW EFEFEF 30 BRIGHT;
			#### # 0
			{
				FadeNum += 1;
				if (FadeNum == 2) {A_SpawnParticle("ff ec 42", SPF_FULLBRIGHT | SPF_RELVEL | SPF_NOTIMEFREEZE, 35, 6, random(0, 359), 0, 0, 0, 0, 2, random(-1, 2), 0, 0, 0, 1.0, 0, -0.17);}
			}
			GLOW E 0 A_FadeOut(0.5);
			Loop;
	}
}

Class GlowstickHealthDrop : Health
{
	Default
	{
		Height 20;
		Radius 10;
		Inventory.Icon "GLOWP0";
		Inventory.PickupMessage "+3 Health";
		+FLOATBOB;
		+BRIGHT;
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
	}
	
	int FadeNum;
	
	override void DoPickupSpecial(Actor toucher)
	{
		if (toucher is "DI_PlayerBase")
		{
			let plr = DI_PlayerBase(toucher);
			plr.DI_HealSelf(3);
		
			Super.DoPickupSpecial(toucher);
		}
	}
	
	States
	{
		Spawn:
			GLOW OPOPOP 30 BRIGHT;
			#### # 0
			{
				FadeNum += 1;
				if (FadeNum == 2) {A_SpawnParticle("01fffd", SPF_FULLBRIGHT | SPF_RELVEL | SPF_NOTIMEFREEZE, 35, 6, random(0, 359), 0, 0, 0, 0, 2, random(-1, 2), 0, 0, 0, 1.0, 0, -0.17);}
			}
			GLOW O 0 A_FadeOut(0.5);
			Loop;
	}
}

CLASS GlowstickThrow : DI_Projectile
{
	//the thing that you throw with your secondary fire.
	//can be used to glow and to kill.
	//each glowstick will be one of the six random colors, and eventually run out to help performance.
	
	string throwstring;
	
	Default
	{
		DamageType "Melee";
		ProjectileKickback 1000;
		Speed 25;
		Radius 6;
		Height 4;
		Gravity 0.3;
		Mass 1;
		
		+INTERPOLATEANGLES;
		+ROLLSPRITE;
		+SPRITEANGLE;
	}

	override int GetWeaponDamage()
	{
		return Super.GetWeaponDamage() * 3;
	}
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		throwstring = "ProjectileSmokeBig";
		if (damagetype == "Fire") {throwstring = "DI_FirePuff";}
		else if (damagetype == "Ice") {throwstring = "DI_IcePuff";}
		else if (damagetype == "Lightning") {throwstring = "DI_LightningPuff";}
		else if (damagetype == "Poison") {throwstring = "DI_PoisonPuff";}
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_SetRoll(random(0, 359));
			Goto Coloring;
		Coloring:
			GLOW D 1 BRIGHT	A_AttachLightDef("sticker", "GLOWGREEN");
			Goto SpeenStart;
		SpeenStart:
			#### # 1 BRIGHT A_Jump(128, "SpeenLeft");
		SpeenRight:
			#### # 0 BRIGHT DIProjectileTrail(2.0);
			#### ### 1 BRIGHT A_SetRoll(roll - 8);
			Loop;
		SpeenLeft:
			#### # 0 BRIGHT DIProjectileTrail(2.0);
			#### ### 1 BRIGHT A_SetRoll(roll + 8);
			Loop;
		XDeath:
		Crash:
			"####" "#" 0 BRIGHT A_StartSound("weapons/glowstick/glowwack");
		Death.Sky:
		Death:
			"####" "#" 1 BRIGHT A_SetRoll(0);
			"####" "#" 0 BRIGHT {bMOVEWITHSECTOR = true;}
			"####" "#" 0 BRIGHT A_SpawnItemEX(throwstring, 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			"####" "#" 0 BRIGHT A_Jump(256, "Flipper", "Stopper");
		Flipper:
			"####" "#" 0 BRIGHT {bSPRITEFLIP = TRUE;}
		Stopper:
			"####" "#" 1000 BRIGHT;
			"####" "#" 0 A_QueueCorpse;
			"####" "#" 0 A_RemoveLight("sticker");
			"####" K 0 A_FadeOut(0.5);
		Burnout:
			"####" K 250 A_FadeOut(0.1);
			Loop;
	}
}