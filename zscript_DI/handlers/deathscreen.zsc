//zscript_DI/handlers/deathscreen.zsc

Class DeathscreenHandler : EventHandler
{
	ui DI_PlayerBase plr;
	ui bool IsDead;
	ui float DeathFade;
	ui int DeathTimer;
	ui float diedmove;
	ui int wavenum;
	ui int msgrng;
	ui bool unlockedscore;
	ui bool scoredone;
	ui int prevscore;
	ui int finalscore; //prevent extra score from being calculated after death.
	ui float exp1, exp2, exp3, lvl1, lvl2;
	
	override void InterfaceProcess(ConsoleEvent e)
	{
		if (e.Name == "newwave_ui")
		{
			wavenum = e.Args[0];
		}
	}

	override void UITick()
	{
		plr = DI_PlayerBase(players[consoleplayer].mo);
		if (!plr) {return;}
		if (plr.Health <= 0) {IsDead = true;}
		else {IsDead = false;}
		
		if (IsDead == true)
		{
			if (msgrng == 0)
			{
				msgrng = random[die](0, 100);
			}
			
			if (DeathFade < 1.0) {DeathFade += 0.01;}
			//else {DeathFade2 += 0.04;}
			++DeathTimer;
			if ((DeathTimer > 105) && (diedmove < 4.0))
			{
				float newmove = 0.02 + ((4.0 - diedmove) / 35);
				diedmove += newmove;
				if ((plr.ScoreUnlock() != "") && (!unlockedscore))
				{
					eventhandler.sendinterfaceevent(consoleplayer, plr.ScoreUnlock());
					unlockedscore = true;
				}
			}
			else if (diedmove > 4.0) {diedmove = 4.0;}
			else if (diedmove < 2.0) {diedmove = 2.0;}
		}
		else
		{
			DeathFade = 0.0;
			DeathTimer = 0;
			diedmove = 2.0;
		}
	}
	
	ui virtual int GetHighScore()
	{
		if (!plr) {return 999999999;}
		cvar highscores = cvar.findcvar("di_highscore");
		string fullscores = highscores.getstring();
		array<string> scorelines;
		fullscores.split(scorelines, ",", TOK_SKIPEMPTY);
		if (scorelines.size() < 1) {return 0;}
		string playername = plr.GetClassName();
		int currentscore;
		for (int i = 0; i < scorelines.size(); ++i)
		{
			array<string> currentline;
			scorelines[i].split(currentline, " ", TOK_SKIPEMPTY);
			if (currentline.size() != 3) 
			{
				//something has gone terribly wrong!
				console.printf("%s", "\caWARNING: Junk data was detected in the highscore CVAR!");
				continue;
			}
			else
			{
				if (currentline[0] != playername) {continue;}
				if (currentline[1] != Level.MapName) {continue;}
				int lsize = currentline[2].Length();
				if (currentline[2].Left(1) == "E")
				{
					string newcheck = currentline[2].Mid(1, lsize - 1);
					if (newcheck.ToInt(10) > currentscore) {currentscore = newcheck.ToInt(10);}
				}
				else 
				{
					string newcheck = currentline[2].Mid(0);
					if (newcheck.ToInt(10) > currentscore) {currentscore = newcheck.ToInt(10);}
				}
			}
		}
		return currentscore;
	}
	
	ui virtual void UpdateHighScore(int newscore, bool iseasy)
	{
		if (!plr) {return;}
		cvar highscores = cvar.findcvar("di_highscore");
		string fullscores = highscores.getstring();
		array<string> scorelines;
		fullscores.split(scorelines, ",", TOK_SKIPEMPTY);
		string playername = plr.GetClassName();
		int scoreposition = -1;
		for (int i = 0; i < scorelines.size(); ++i)
		{
			array<string> currentline;
			scorelines[i].split(currentline, " ", TOK_SKIPEMPTY);
			if (currentline.size() != 3) 
			{
				//something has gone terribly wrong!
				console.printf("%s", "\caWARNING: Junk data was detected in the highscore CVAR!");
				continue;
			}
			else
			{
				if (currentline[0] != playername) {continue;}
				if (currentline[1] != Level.MapName) {continue;}
				string easycheck = "";
				if (skill == 0) {easycheck = "E";}
				currentline[2] = string.format("%s%d", easycheck, newscore);
				scorelines[i] = string.format("%s %s %s", currentline[0], currentline[1], currentline[2]);
				scoreposition = i;
			}
		}
		if (scoreposition == -1)
		{
			string easycheck = "";
			if (skill == 0) {easycheck = "E";}
			string scoreinput = string.format("%s %s %s%d", playername, Level.MapName, easycheck, newscore);
			scorelines.push(scoreinput);
		}
		
		string newcvar = "";
		for (int i = 0; i < scorelines.size(); ++i)
		{
			newcvar.AppendFormat("%s,", scorelines[i]);
		}
		highscores.setstring(newcvar);
	}
	
	ui virtual void UpdateSwag(int newscore)
	{
		if (!plr) {return;}
		cvar swaglevel = cvar.findcvar("di_swaglevel");
		cvar experience = cvar.findcvar("di_experience");
		int curexp = experience.getint();
		int curlvl = swaglevel.getint();
		
		int newexp = newscore;
		int bonusexp = (newscore - prevscore) * 2; //give +200% exp for high score.
		if (bonusexp > 0) {newexp += bonusexp;}
		curexp += newexp;
		
		int expmax = 10000 * (1 + curlvl);
		int newlvl = 0;
		while (curexp >= expmax)
		{
			curlvl += 1;
			newlvl += 1;
			curexp -= expmax;
			expmax = 10000 * (1 + curlvl);
		}
		
		exp1 = curexp;
		exp2 = expmax;
		exp3 = newexp;
		lvl1 = curlvl;
		lvl2 = newlvl;
		//console.printf("\cnExp: %d/%d \cf(+%d)", curexp, expmax, newexp);
		//console.printf("\ctSwag Lvl: %d", curlvl);
		//if (newlvl == 1) {console.printf("\cfYou gained %d swag level this game.", newlvl);}
		//else if (newlvl > 1) {console.printf("\cfYou gained %d swag levels this game.", newlvl);}
		swaglevel.setint(curlvl);
		experience.setint(curexp);
	}
	
	override void RenderOverlay(RenderEvent e)
	{
		if (plr && (IsDead == true))
		{
			string spacing = "\n\n\n";
			let startx = Screen.GetWidth() / 3;
			let startx2 = startx * 2;
			let blackscreen = TexMan.CheckForTexture("textures/box/BLACK.png");
			Screen.DrawTexture(blackscreen, false,
				0, 0,
				DTA_DestWidth, Screen.GetWidth(),
				DTA_DestHeight, Screen.GetHeight(),
				DTA_Alpha, DeathFade
			);
			
			if (!scoredone)
			{
				prevscore = GetHighScore();
				finalscore = plr.GetScore();
				if (finalscore > prevscore)
				{
					bool iseasy = false;
					if (skill == 0) {iseasy = true;}
					UpdateHighScore(finalscore, iseasy);
				}
				UpdateSwag(finalscore);
				eventhandler.sendnetworkevent("swagcheck");
				scoredone = true;
			}
			
			if (DeathTimer > 35)
			{
				string died = "DEATH IS INEVITABLE";
				if (plr.Score < 0) {died = "DEBT IS INEVITABLE";}
				else switch(msgrng)
				{
					case 1: died = "MEMENTO MORI"; break;
					case 2: died = "u ded lmao"; break;
					case 3: died = "rip bozo"; break;
					case 4: died = "better luck next time"; break;
					case 5: died = "unlucky"; break;
					case 6: died = "99% of players died here"; break;
					case 7: died = "your life has expired"; break;
				}
				int scaley = (bigfont.GetHeight() * (CleanYFac * 1.3)) / 2;
				Screen.DrawText(bigfont, Font.CR_BRICK,
					(Screen.GetWidth() / 2) - ((bigfont.StringWidth(died) / 2) * (CleanXFac * 1.3)),
					(Screen.GetHeight() / diedmove) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.3,
					DTA_ScaleY, CleanYFac * 1.3
				);
			}
			if (DeathTimer > 155)
			{
				string died = string.format("Current Wave: \ck%d", wavenum);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					(Screen.GetWidth() / 2) - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.5)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.5,
					DTA_ScaleY, CleanYFac * 1.5
				);
			}
			if (DeathTimer > 170)
			{
				string died = string.format("%sEnemies Killed: \cr%d", spacing, plr.killcounter);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 170)
			{
				string died = string.format("%sItems Bought: \cn%d", spacing, plr.buycounter);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx2 - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 185)
			{
				spacing.appendformat("%s", "\n\n");
				string died = string.format("%sMoney Spent: \cp$%d", spacing, plr.moneyspent);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 185)
			{
				int worth = plr.Score;
				string dollar = "\cd$";
				if (worth < 0) {dollar = "\ca-$"; worth *= -1;}
				string died = string.format("%sCurrent Worth: %s%d", spacing, dollar, worth);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx2 - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 200)
			{
				spacing.appendformat("%s", "\n\n");
				string totalcolor = "\cf";
				if (finalscore < 0) {totalcolor = "\ca";}
				string died = string.format("%s%sFinal Rating: %d", spacing, totalcolor, finalscore);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 200)
			{	
				string totalcolor = "\ci";
				string newbest = "";
				if (finalscore > prevscore) {newbest = "\n\cv(New Best!)";}
				string died = string.format("%s%sPrevious Score: %d%s", spacing, totalcolor, prevscore, newbest);
				int scaley = (32 * (CleanYFac * 2)) / 2;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					startx2 - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.0)),
					(Screen.GetHeight() / 2) - scaley,
					died,
					DTA_ScaleX, CleanXFac * 1.0,
					DTA_ScaleY, CleanYFac * 1.0
				);
			}
			if (DeathTimer > 215)
			{
				string died = string.format("%s \cb%d", "\ctSwag Level:", lvl1);
				int starty = (Screen.GetHeight() * 2) / 3;
				Screen.DrawText(smallfont, Font.CR_WHITE,
					(Screen.GetWidth() / 2) - ((smallfont.StringWidth(died) / 2) * (CleanXFac * 1.5)),
					starty,
					died,
					DTA_ScaleX, CleanXFac * 1.5,
					DTA_ScaleY, CleanYFac * 1.5
				);
				
				int startx3 = (Screen.GetWidth() / 2) - (80 * CleanXFac);
				string fill1 = "9999ea";
				string fill2 = "000073";
				string fill3 = "f4ef6a";
				string fill4 = "732b00";
				string dim1 = "404040";
				string dim2 = "121212";
				starty += 16 * CleanYFac;
				Screen.Dim(dim2, 1.0, startx3 - (2 * CleanXFac), starty - (2 * CleanYFac), 
					164 * CleanXFac, 
					10 * CleanYFac
				);
				Screen.Dim(dim1, 1.0, startx3, starty, 
					160 * CleanXFac, 
					6 * CleanYFac
				);
				
				float remainder = ((exp2 - exp1) / exp2) * (160.0 * CleanXFac);
				float gained = ((exp2 - (exp1 - exp3)) / exp2) * (160.0 * CleanXFac);
				
				if (remainder > 0)
				{
					Screen.Dim(fill4, 1.0, startx3 - (2 * CleanXFac), starty - (2 * CleanYFac), 
						(162 * CleanXFac) - remainder, 
						10 * CleanYFac
					);
					Screen.Dim(fill3, 1.0, startx3, starty, 
						(160 * CleanXFac) - remainder, 
						6 * CleanYFac
					);
				}
				
				if (gained > 0)
				{
					Screen.Dim(fill2, 1.0, startx3 - (2 * CleanXFac), starty - (2 * CleanYFac), 
						(162 * CleanXFac) - gained, 
						10 * CleanYFac
					);
					Screen.Dim(fill1, 1.0, startx3, starty, 
						(160 * CleanXFac) - gained, 
						6 * CleanYFac
					);
				}
				
				string expstring = string.format("\cnExp: \cb%d\cn/\cb%d \cf(+%d)", exp1, exp2, exp3);
				Screen.DrawText(smallfont, Font.CR_WHITE,
					(Screen.GetWidth() / 2) - ((smallfont.StringWidth(expstring) / 2) * CleanXFac),
					starty + (12 * CleanYFac),
					expstring,
					DTA_ScaleX, CleanXFac,
					DTA_ScaleY, CleanYFac
				);
				
				string lvlstring = "";
				if (lvl2 >= 1)
				{
					lvlstring = string.format("\n\n\cfYou gained %d swag this game.", lvl2);
					Screen.DrawText(smallfont, Font.CR_WHITE,
						(Screen.GetWidth() / 2) - ((smallfont.StringWidth(lvlstring) / 2) * CleanXFac),
						starty + (12 * CleanYFac),
						lvlstring,
						DTA_ScaleX, CleanXFac,
						DTA_ScaleY, CleanYFac
					);
				}
			}
		}
		else if (!IsDead)
		{
			scoredone = false;
		}
	}
}