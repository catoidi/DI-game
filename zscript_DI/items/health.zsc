//health.zsc

Class DI_FullHeal : Inventory
{
	mixin DI_ActorMixin;
	
	Default
	{
		Inventory.PickupMessage "+100 Health";
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
		+BRIGHT;
		+FLOATBOB;
	}
	
	override bool Use(bool pickup)
	{
		if (pickup)
		{
			if (owner is "DI_PlayerBase")
			{
				let plr = DI_PlayerBase(owner);
				plr.DI_HealSelf(100);
				eventhandler.sendnetworkevent("di_burgerunlock");
				return true;
			}
		}
		return false;
	}
	
	States
	{
		Spawn:
			HEAL A -1;
			Stop;
	}
}

Class DI_Melon : Inventory
{
	mixin DI_ActorMixin;
	
	Default
	{
		Inventory.PickupMessage "+60 Health";
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
		+BRIGHT;
		+FLOATBOB;
	}
	
	override bool Use(bool pickup)
	{
		if (pickup)
		{
			if (owner is "DI_PlayerBase")
			{
				let plr = DI_PlayerBase(owner);
				plr.DI_HealSelf(60, 2.0);
				return true;
			}
		}
		return false;
	}
	
	States
	{
		Spawn:
			HEAL E -1;
			Stop;
	}
}

Class DI_Regen : HealthPickup //regenerates 1 hp every second.
{
	int hptick;

	Default
	{
		Health 1;
		Inventory.MaxAmount 999;
		-INVENTORY.INVBAR;
	}

	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner && (owner.isFrozen() == false))
		{
			++hptick;
			if (hptick >= 35)
			{
				if (CallACS("DICheckWaveProgress") == true)
				{
					int maxhp = owner.GetMaxHealth(true) - owner.CountInv("DI_Degen");
					if (owner.health < maxhp) {Use(false);}
					int takeamount = 1;
					if ((owner.CountInv("DI_Regen") + owner.health) > maxhp) {takeamount = 2;}
					owner.A_TakeInventory("DI_Regen", takeamount);
				}
				hptick = 0;
			}
		}
	}
}

Class DI_Degen : Inventory
{
	int hptick;
	
	Default
	{
		Inventory.MaxAmount 999;
		-INVENTORY.INVBAR;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner.GetMaxHealth(true) <= owner.CountInv("DI_Degen"))
		{
			owner.A_Die();
		}
	}
}