//health.zsc

Class DI_FullHeal : Inventory
{
	mixin DI_ActorMixin;
	
	Default
	{
		Inventory.PickupMessage "+100 Health";
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
		+BRIGHT;
		+FLOATBOB;
	}
	
	override bool Use(bool pickup)
	{
		if (pickup)
		{
			if (owner is "DI_PlayerBase")
			{
				let plr = DI_PlayerBase(owner);
				plr.DI_HealSelf(1000);
				eventhandler.sendnetworkevent("di_burgerunlock");
				return true;
			}
		}
		return false;
	}
	
	States
	{
		Spawn:
			HEAL A -1;
			Stop;
	}
}

Class DI_Melon : Inventory
{
	mixin DI_ActorMixin;
	
	Default
	{
		Inventory.PickupMessage "+60 Health";
		+Inventory.AUTOACTIVATE;
		+Inventory.ALWAYSPICKUP;
		+BRIGHT;
		+FLOATBOB;
	}
	
	override bool Use(bool pickup)
	{
		if (pickup)
		{
			if (owner is "DI_PlayerBase")
			{
				let plr = DI_PlayerBase(owner);
				plr.DI_HealSelf(600, 2.0);
				return true;
			}
		}
		return false;
	}
	
	States
	{
		Spawn:
			HEAL E -1;
			Stop;
	}
}

Class DI_Regen : Inventory //regenerates 1 hp every second.
{
	double hptick;
	
	DI_PlayerBase plr;
	DI_Weapon wpn;

	Default
	{
		Inventory.MaxAmount 9999999;
		-INVENTORY.INVBAR;
	}

	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner && (owner.isFrozen() == false))
		{
			if (!plr && owner is "DI_PlayerBase")
			{
				plr = DI_PlayerBase(owner);
				wpn = DI_Weapon(plr.player.ReadyWeapon);
			}
			double hptick_max = (plr && wpn) ? wpn.plr_regen : 3.5;
			if (hptick_max < 0.01) {hptick_max = 0.01;}
		
			int ticktime = 0;
			++hptick;
			while (hptick >= hptick_max) {++ticktime; hptick -= hptick_max;}
			
			if ((ticktime > 0) && (CallACS("DICheckWaveProgress") == true))
			{
				for (int i = 0; i < ticktime; ++i) {owner.A_SpawnParticle("a2d500", SPF_FULLBRIGHT, 40, 4, 0, random(-owner.radius, owner.radius), random(-owner.radius, owner.radius), random(0, 8), 0, 0, 0, 0, 0, 0.33, 0.25);}
				
				int maxhp;
				if (plr)
				{
					maxhp = plr.DIMaxHealth();
					if (plr.health < maxhp) {plr.DI_HealSelf(ticktime, 1.0, false, false);}
				}
				else
				{
					maxhp = owner.GetMaxHealth(true) - owner.CountInv("DI_Degen");
					if (owner.health < maxhp) {owner.GiveBody(ticktime);}
				}
				int takeamount = ticktime;
				if ((owner.CountInv("DI_Regen") + owner.health) > maxhp) {takeamount *= 2;}
				owner.A_TakeInventory("DI_Regen", takeamount);
			}
		}
	}
}

Class DI_Degen : Inventory
{
	int hptick;
	
	Default
	{
		Inventory.MaxAmount 9999999;
		-INVENTORY.INVBAR;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner.GetMaxHealth(true) <= amount)
		{
			owner.A_Die();
		}
	}
}

Class DI_MaxHealthGiver : DIPassiveInventory
{
	Default
	{
		Inventory.MaxAmount 1000000;
	}
	
	override double GiveHealingPower()
	{
		if (!plr) {return 1.0;}
		return 1.0 + 0.001 * amount;
	}
	
	override double GiveRegenSpeed()
	{
		if (!plr) {return 1.0;}
		return 1.0 / (1.0 + 0.001 * amount);
	}
	
	override double GiveMaxHealth()
	{
		if (!plr) {return 1.0;}
		return 1.0001 + 0.001 * amount;
	}
}