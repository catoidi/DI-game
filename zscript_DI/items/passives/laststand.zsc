//zscript_DI/items/passives/laststand.zsc

Class DI_LastStand : DIPassiveInventory
{
	Default
	{
		Tag "Last Stand";
		Inventory.Icon "POW1G0";
		Inventory.PickupMessage "Acquired Last Stand! (Gain passive Regen upon reaching low enough HP.)";
		Inventory.MaxAmount 4;
	}
	
	int lasttimer;
	bool savinggrace;

	override void DoEffect(void)
	{
		Super.DoEffect();
		
		++lasttimer;
		
		if (owner && (lasttimer >= (75 - (owner.CountInv("DI_LastStand") * 5))))
		{
			if (savinggrace == false) {savinggrace = true;}
			else if (owner is "DI_PlayerBase")
			{
				if (CallACS("DICheckWaveProgress") == true)
				{
					DI_PlayerBase plr = DI_PlayerBase(owner);
					
					float regennum = 0.1 + (0.15 * plr.CountInv("DI_LastStand"));
					int hpthreshold = (plr.GetMaxHealth(true) - plr.CountInv("DI_Degen")) * regennum;
					if (plr.Health < hpthreshold)
					{
						int givenum = ((hpthreshold - plr.health) >= 10) ? 10 : hpthreshold - plr.health;
						plr.A_GiveInventory("DI_Regen", givenum);
					}
				}
			}
			lasttimer = 0;
		}
	}
	
	override void ModifyDamage(int damage, Name damageType, out int newdamage, bool passive, Actor inflictor, Actor source, int flags)
	{
		if ((newdamage >= 1) && (owner) && (passive == true))
		{
			if ((newdamage >= owner.health) && (owner.health > 1) && (savinggrace == true))
			{
				newdamage = owner.health - 1;
				savinggrace = false;
			}
		}
	
		Super.ModifyDamage(damage, damageType, newdamage, passive, inflictor, source, flags);
	}
	
	States
	{
		Spawn:
			POW1 G -1;
			Stop;
	}
}