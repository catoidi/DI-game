//zscript_DI/items/passives/sesameseeds.zsc

Class DI_SesameSeeds : DIPassiveInventory
{
	Default
	{
		Tag "Sesame Seeds";
		Inventory.Icon "POW3L0";
		Inventory.PickupMessage "Sesame Seeds acquired! (Leave a trail of sesame seeds behind you as you walk. The seeds deal contact damage to enemies.)";
		Inventory.MaxAmount 4;
	}
	
	override void DoEffect()
	{
		Super.DoEffect();
		if (plr && !plr.IsFrozen())
		{
			//if it works it works
			vector3 curvel = plr.vel;
			if (curvel.x < 0) {curvel.x *= -1;}
			if (curvel.y < 0) {curvel.y *= -1;}
			if (curvel.z < 0) {curvel.z *= -1;}
			double totalvel = curvel.x + curvel.y + curvel.z;
			
			if (totalvel >= 8.0) {SpawnSeeds();}
		}
	}
	
	int seedtimer;
	
	virtual void SpawnSeeds()
	{
		++seedtimer;
		if (seedtimer >= 3)
		{
			plr.A_SpawnItemEX("DI_SesameSeeds_Drop", random(-plr.radius, plr.radius), random(-plr.radius, plr.radius), plr.height / 3, plr.vel.x, plr.vel.y, plr.vel.z, 0, SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION | SXF_SETTARGET, 180 - (40 * plr.countinv(self.getclassname())), 7499);
			seedtimer = 0;
		}
	}
	
	States
	{
		Spawn:
			POW3 L -1;
			Stop;
	}
}

Class DI_SesameSeeds_Drop : DI_Projectile
{
	Default
	{
		Radius 6;
		Height 12;
		Alpha 0.3;
		DI_Actor.IgnoreWeapon true;
		DI_Projectile.AutoImpact false;
		DI_Projectile.CanImpactFloor false;
		DI_Projectile.CanImpactWall false;
		BounceType "Hexen";
		BounceFactor 0.8;
		WallBounceFactor 0.8;
		Gravity 1.0;
		RenderStyle "Translucent";
		+ROLLSPRITE;
		-BOUNCEONACTORS;
		-NOGRAVITY;
	}
	
	int spawncooldown;
	int cursprite;
	
	override int GetWeaponDamage()
	{
		GetDIPlayer();
		if (plr) {return plr.countinv("DI_SesameSeeds") * 80;}
		else {return 80;}
	}
	
	override bool CanCollideWith(Actor other, bool passive)
	{
		if ((other.bSHOOTABLE) && (spawncooldown < 35)) {return false;}
		if (other is "DI_Monster") {return Super.CanCollideWith(other, passive);}
		else {return false;}
	}
	
	action void SeedTick()
	{
		if (invoker.cursprite == 0) {invoker.cursprite = random(1, 3);}
		frame = invoker.cursprite - 1;
		
		++invoker.spawncooldown;
		if (invoker.spawncooldown >= 35)
		{
			if ((invoker.vel.x < 1.0) && (invoker.vel.x > -1.0)) {invoker.vel.x = 0.0;}
			if ((invoker.vel.y < 1.0) && (invoker.vel.y > -1.0)) {invoker.vel.y = 0.0;}
			if ((invoker.vel.z < 1.0) && (invoker.vel.z > 0.0)) {invoker.vel.z = 0.0;}
		}
		else
		{
			A_FadeTo(1.0, 0.02);
		}
	}
	
	//copy/pasted from PartyShotgun's bullets.
	action void FakeShottyCrumb()
	{
		A_SpawnParticleEX("White", TexMan.CheckForTexture("SHUTX0"), 0, SPF_ROLL, 24, 4.0, random(0, 359), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 2), random(-2, 3), 0, 0, -0.33, 1, 0, -0.16, random(0, 359), 3 - (6 * (random(0, 1))));
	}
	
	States
	{
		Spawn:
			TNT1 A 0 A_SetRoll(random(0, 359)); 
			SEED A 1 SeedTick();
			Wait;
		Death.Sky:
		Death:
			TNT1 A 5
			{
				A_ProjectileSmoke();
				FakeShottyCrumb();
				FakeShottyCrumb();
				FakeShottyCrumb();
				if (invoker.damagetype != invoker.default.damagetype) {DIProjectileTrail(3.0);}
			}
			Stop;
	}
}