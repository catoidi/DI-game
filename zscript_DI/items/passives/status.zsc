//status effect passives

Class DI_StatusGiver_Ice : DIPassiveInventory
{
	Default
	{
		Inventory.PickupMessage "Acquired Bullet Freezer! (Small chance for all weapons to do Ice damage.)";
		Inventory.MaxAmount 10;
		DIPassiveInventory.DIHidden true;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner is "DI_PlayerBase")
		{
			DI_PlayerBase plr = DI_PlayerBase(owner);
			
			plr.chance_ice += plr.CountInv("DI_StatusGiver_Ice");
			
			if (plr.CountInv("DI_StatusGiver_Ice") <= plr.CountInv("DI_StatusGiver_Rainbow")) {dipassive_hidden = true;}
			else {dipassive_hidden = false;}
		}
	}
	
	States
	{
		Spawn:
			POWR N -1;
			Stop;
	}
}

Class DI_StatusGiver_Fire : DIPassiveInventory
{
	Default
	{
		Inventory.PickupMessage "Acquired Bullet Burner! (Small chance for all weapons to do Fire damage.)";
		Inventory.MaxAmount 10;
		DIPassiveInventory.DIHidden true;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner is "DI_PlayerBase")
		{
			DI_PlayerBase plr = DI_PlayerBase(owner);
			
			plr.chance_fire += plr.CountInv("DI_StatusGiver_Fire");
			
			if (plr.CountInv("DI_StatusGiver_Fire") <= plr.CountInv("DI_StatusGiver_Rainbow")) {dipassive_hidden = true;}
			else {dipassive_hidden = false;}
		}
	}
	
	States
	{
		Spawn:
			POWR O -1;
			Stop;
	}
}

Class DI_StatusGiver_Lightning : DIPassiveInventory
{
	Default
	{
		Inventory.PickupMessage "Acquired Bullet Shocker! (Small chance for all weapons to do Shock damage.)";
		Inventory.MaxAmount 10;
		DIPassiveInventory.DIHidden true;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner is "DI_PlayerBase")
		{
			DI_PlayerBase plr = DI_PlayerBase(owner);
			
			plr.chance_lightning += plr.CountInv("DI_StatusGiver_Lightning");
			
			if (plr.CountInv("DI_StatusGiver_Lightning") <= plr.CountInv("DI_StatusGiver_Rainbow")) {dipassive_hidden = true;}
			else {dipassive_hidden = false;}
		}
	}
	
	States
	{
		Spawn:
			POWR P -1;
			Stop;
	}
}

Class DI_StatusGiver_Poison : DIPassiveInventory
{
	Default
	{
		Inventory.PickupMessage "Acquired Bullet Poisoner! (Small chance for all weapons to do Poison damage.)";
		Inventory.MaxAmount 10;
		DIPassiveInventory.DIHidden true;
	}
	
	override void DoEffect(void)
	{
		Super.DoEffect();
		
		if (owner is "DI_PlayerBase")
		{
			DI_PlayerBase plr = DI_PlayerBase(owner);
			
			plr.chance_poison += plr.CountInv("DI_StatusGiver_Poison");
			
			if (plr.CountInv("DI_StatusGiver_Poison") <= plr.CountInv("DI_StatusGiver_Rainbow")) {dipassive_hidden = true;}
			else {dipassive_hidden = false;}
		}
	}
	
	States
	{
		Spawn:
			POWR Q -1;
			Stop;
	}
}

Class DI_StatusGiver_Rainbow : DIPassiveInventory
{
	bool statusgiven;

	//gives all 4 status effects at once.
	Default
	{
		Inventory.PickupMessage "Acquired Rainbow Bullets! (Chance for all weapons to do fire/ice/poison/shock damage.)";
		Inventory.MaxAmount 3;
	}
	
	override void DoEffect(void)
	{
		if (CallACS("DICheckWaveProgress") == true) 
		{
			//don't do this part until the player is in the wave, otherwise the "maxamount" stuff for the shop won't work.
			if (owner)
			{
				if (statusgiven == false)
				{
					owner.A_GiveInventory("DI_StatusGiver_Ice", owner.CountInv("DI_StatusGiver_Rainbow"));
					owner.A_GiveInventory("DI_StatusGiver_Fire", owner.CountInv("DI_StatusGiver_Rainbow"));
					owner.A_GiveInventory("DI_StatusGiver_Poison", owner.CountInv("DI_StatusGiver_Rainbow"));
					owner.A_GiveInventory("DI_StatusGiver_Lightning", owner.CountInv("DI_StatusGiver_Rainbow"));
					statusgiven = true;
				}
			}
		}
		else {statusgiven = false;}
	}
	
	States
	{
		Spawn:
			POWR V -1;
			Stop;
	}
}